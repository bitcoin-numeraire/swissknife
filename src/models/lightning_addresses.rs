//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "lightning_addresses")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    #[sea_orm(unique)]
    pub user_id: String,
    #[sea_orm(unique)]
    pub username: String,
    pub active: bool,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: Option<DateTimeWithTimeZone>,
    pub deleted_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::lightning_invoices::Entity")]
    LightningInvoices,
    #[sea_orm(has_many = "super::lightning_payments::Entity")]
    LightningPayments,
}

impl Related<super::lightning_invoices::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LightningInvoices.def()
    }
}

impl Related<super::lightning_payments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::LightningPayments.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
